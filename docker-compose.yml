version: '3.2'
services:
  user-service:
    build:
      context: '.'
      dockerfile: 'api/user-service/Dockerfile'
    image: user-service
    ports:
      - "8080:8080"
    depends_on:
      - "mongo-database"
    volumes:
      - ./api/user-service:/usr/src/app/api/user-service
      - ./packages:/usr/src/app/packages
    environment:
      - PORT=8080
      - API_VERSION=v1
      - PROTOCOL=http
      - RDS_HOSTNAME=localhost
      - MONGODB_URI=mongodb://root:1234@mongo-database:27017/user
      - JWT_SECRET=SOME_SECRET

  # setup the MongoDB database
  mongo-database:
    # pulls the latest, stable image
    image: mongo:latest
    container_name: user-service-mongodb

    # bind mount volume for MongoDB documents
    volumes:
      - ./mongo-data:/data/db

    ports:
      - '27017:27017'

    # configure the Docker entrypoint for MongoDB
    environment:
      - MONGO_INITDB_DATABASE=user
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=1234

  user-service-test:
    image: user-service
    command: dockerize -wait tcp://mongo-database:27017 -wait tcp://user-service:8080 -timeout 10s bash -c "yarn test"
    environment:
      - PORT=8080
      - API_VERSION=v1
      - PROTOCOL=http
      - RDS_HOSTNAME=user-service
      - MONGODB_URI=mongodb://root:1234@mongo-database:27017/user
      - JWT_SECRET=SOME_SECRET
    depends_on:
      - mongo-database
      - user-service